* HTML 속의 자바스크립트

** <script> 요소
   인라인 스크립트의 경우 바로 실행되지만 외부 스크립트를 가져와서
   실행할 때는 스크립트를 가져와 실행할 때까지 html 구문 분석이
   지연된다.
*** async와 defer
**** async
     - HTML 구문 분석과 스크립트 로드를 병행하고 스크립트가 준비될
       때마다 즉시 실행이 가능. 실행 중엔 구문분석이 일시 중지됨.
     - 외부스크립트를 불러올 때만 유효
     - 실행 순서를 보장할 수 없음. (HTML5 spec에서 async=false 속성을
       지정하면 호출 순서대로 실행됨)
**** defer
     - HTML 구문 분석이 실행되는 동안 스크립트 파일로드 가능.
     - 로드된 스크립트는 구문분석이 완료될 때까지 실행되지 않음.
     - async와 다르게 스크립트 태그가 명시된 순서대로 실행됨.
     - 외부스크립트를 불러올 때만 유효(IE 7이전 버전에서는 인라인
       스크립트에서도 허용)
     - 스크립트 태그를 순서대로 불러오는데 dom을 랜더하고 나서 실행
**** async와 defer를 사용할 때 고려할 사항
***** <script> 요소는 어디에 있는가?
      </body> 바로 위에 있는 경우 큰 효과가 없음.
***** 종속성이 없는 스크립트인가?
      종속성이 없는 스크립트의 경우 실행 순서가 중요하지 않기 때문에
      async속성이 유용하다.
***** 스크립트가 완전히 구문 분석 된 DOM에 의존하는가?
      DOM에 의존적일 경우 스크립트 태그를 </body> 바로 위에 두어 모든
      내용이 파싱된 후 동작하도록 해야한다.  어떤 이유로 다른 위치에
      배치해야 한다면 defer속성을 사용해서 비슷한 효과를 낼 수 있다.
***** 스크립트가 작고 종속성을 가지는가?
      스크립트가 비교적 작고 다른 파일에 의존하는 경우 인라인으로
      정의하는 것이 유용할 수 있다.
*** 동적 script 태그 추가
    defer, async 속성은 true로 설정됨.
    의존성 문제 발생 가능성이 있음.
*** 인라인 자바스크립트
    - script 태그 안에 "</script>"는 쓸 수 없음. 이스케이프 해서
      "<\/script>"로 쓸 수 있음
*** xhtml
    이 책에서 xhtml이 html에 xml을 확장한 것이라고 적혀있을 뿐, 왜
    필요한지에 대한 내용이 나와있지 않아 겉핧기 이론만 설명해 놓은 것
    같았다.

** 참고
   - https://blog.asamaru.net/2017/05/04/script-async-defer/
